/*!
 * fitapp v0.0.1 ()
 * Copyright 2011-2014 mediaroth
 * Licensed under BSD
 */
angular.module("fitApp.directives",[]),angular.module("fitApp.services",[]),angular.module("fitApp.filters",[]),angular.module("fitApp.controllers",["fitApp.services"]);var fitApp=angular.module("fitApp",["ngRoute","ngCookies","restangular","fitApp.services","fitApp.controllers","fitApp.filters","fitApp.directives"]).constant("ACCESS_LEVELS",{pub:1,user:2}).run(["$rootScope","$location","Auth",function(a,b,c){a.test="Hello from root",a.$on("$routeChangeStart",function(a,d){c.isAuthorized(d.access_level)||(c.isLoggedIn()?(console.log("no permissions",d.access_level,c.isLoggedIn()),b.path("/")):(console.log("not authorized"),b.path("/login")))})}]).config(["$routeProvider","$locationProvider","ACCESS_LEVELS",function(a,b,c){b.html5Mode(!0),a.when("/",{templateUrl:"/templates/home.html",controller:"HomeController",access_level:c.pub}).when("/exercise",{templateUrl:"/templates/exercise.html",controller:"ExerciseController",access_level:c.pub}).when("/workout",{templateUrl:"/templates/workout.html",controller:"WorkoutController",access_level:c.user}).when("/register",{templateUrl:"/templates/register.html",controller:"UserController",access_level:c.pub}).when("/myprofile",{templateUrl:"/templates/myprofile.html",controller:"UserController",access_level:c.user}).when("/login",{templateUrl:"/templates/login.html",controller:"UserController",access_level:c.pub}).otherwise({redirectTo:"/",templateUrl:"/templates/home.html"})}]).config(["$httpProvider","$provide",function(a){var b=function(a,b){a.defer();return{response:function(a){return"/api/users/login"==a.config.url&&console.log(a.data.token),console.log(a.config),a},responseError:function(c){switch(c.status){case 401:"api/login"!==c.config.url&&b.$broadcast("auth:loginRequired");break;case 403:b.$broadcast("auth:forbidden");break;case 404:b.$broadcast("page:notFound");break;case 500:b.$broadcast("server:error")}return a.reject(c)}}};a.interceptors.push(b)}]);angular.module("fitApp.controllers").controller("ExerciseController",["$scope","exerciseService",function(a,b){a.exerciseData={},a.exercises=[],a.loading=!1,a.submitted=!1,a.errors=[],a.success=!1,a.exercises=b.getAll().$object,a.submit=function(){a.error=!1,a.success=!1,a.exercise_form.$valid?(a.submitted=!1,a.error=!1,a.loading=!0,a.exerciseData.id?b.put(a.exerciseData).then(function(c){return a.success=c.success,b.getAll()}).then(function(b){a.exercises=b,a.loading=!1},function(a){console.log(a)}):b.post(a.exerciseData).then(function(c){return console.log(c),a.success=c.success,b.getAll()},function(c){return a.error=c.data.error,a.errors=c.data.errors,b.getAll()}).finally(function(){}).then(function(b){a.exercises=b,a.loading=!1},function(a){console.log(a)})):a.submitted=!0},a.destroy=function(c){a.loading=!0,b.destroy(c).then(function(){return console.log("deleted "+c),b.getAll()},function(a){console.log(a)}).then(function(b){console.log("updated list"),a.exercises=b,a.loading=!1})},a.edit=function(c){a.error=!1,a.success=!1,b.get(c).then(function(b){a.exerciseData=b})},a.clear=function(){a.exerciseData={},a.error=!1,a.success=!1,a.submitted=!1,a.exercise_form.$setPristine()}}]),angular.module("fitApp.controllers").controller("HomeController",function(a,b){a.user=b.getUser(),a.test="Hello World, I'm so cool ! Maybe even more so !! Oh Yeaahhhh, so jelly right now"}),angular.module("fitApp.controllers").controller("UserController",["$scope","$location","userService",function(a,b,c){a.user={},a.loading=!1,a.submitted=!1,a.errors=[],a.success=!1,a.register=function(){a.error=!1,a.success=!1,a.register_form.$valid?(a.submitted=!1,a.error=!1,a.loading=!0,c.post(a.user).then(function(c){a.success=c.success,b.path("/myprofile")},function(b){a.error=b.data.error,a.errors=b.data.errors})):a.submitted=!0},a.login=function(){a.error=!1,a.success=!1,a.login_form.$valid?(a.submitted=!1,a.error=!1,a.loading=!0,c.postLogin(a.user).then(function(c){console.log(c),a.success=c.success,b.path("/myprofile")},function(b){console.log(b),a.error=b.data.error,a.errors=b.data.errors})):a.submitted=!0},a.clear=function(){a.error=!1,a.success=!1,a.submitted=!1,a.register_form.$setPristine()}}]),angular.module("fitApp.controllers").controller("WorkoutController",["$scope","$http","workoutService",function(a,b,c){a.workoutData={},a.workouts=[],a.loading=!1,a.submitted=!1,a.errors=[],a.success=!1,a.workouts=c.getAll().$object,a.submit=function(){a.error=!1,a.success=!1,a.workout_form.$valid?(a.submitted=!1,a.error=!1,a.loading=!0,a.workoutData.id?c.put(a.workoutData).then(function(b){return a.success=b.success,c.getAll()}).then(function(b){a.workouts=b,a.loading=!1},function(a){console.log(a)}):c.post(a.workoutData).then(function(b){return console.log(b),a.success=b.success,c.getAll()},function(b){return a.error=b.data.error,a.errors=b.data.errors,c.getAll()}).finally(function(){}).then(function(b){a.workouts=b,a.loading=!1},function(a){console.log(a)})):a.submitted=!0},a.destroy=function(b){a.loading=!0,c.destroy(b).then(function(){return console.log("deleted "+b),c.getAll()},function(a){console.log(a)}).then(function(b){console.log("updated list"),a.workouts=b,a.loading=!1})},a.edit=function(b){a.error=!1,a.success=!1,c.get(b).then(function(b){a.workoutData=b})},a.clear=function(){a.workoutData={},a.error=!1,a.success=!1,a.submitted=!1,a.workout_form.$setPristine()}}]),angular.module("fitApp.directives",[]).directive("tableList",function(){return{restrict:"A",replace:!0,templateUrl:"/templates/directives/tableList.html",scope:{objects:"=objects",edit:"=editFn",destroy:"=destroyFn",someProp:"@"},controller:function(a){console.log(a.objects)}}}).directive("ngFocus",[function(){var a="ng-focused";return{restrict:"A",require:"ngModel",link:function(b,c,d,e){e.$focused=!1,c.bind("focus",function(){c.addClass(a),b.$apply(function(){e.$focused=!0})}).bind("blur",function(){c.removeClass(a),b.$apply(function(){e.$focused=!1})})}}}]).directive("myDirective",function(){return{require:"?ngModel",template:'<div class="sidebox">                    <div class="content">                      <h2 class="header">{{ workoutData.name }}</h2>                      <span class="content">                      {{ workoutData.description }}</span>                    </div>                  </div>',link:function(a,b,c,d){d?($(function(){$("#foo").on("blur",function(){a.$apply(function(){d.$setViewValue($("#foo").val())})})}),console.log(d.$viewChangeListeners)):console.log("no ngModel")}}}),angular.module("fitApp.services").factory("Auth",function(a,b){var c=a.get("user"),d=function(d){(!d.role||d.role<0)&&(d.role=b.pub),c=d,a.put("user",c)};return{isAuthorized:function(a){return c?c.role>=a:1===a?!0:!1},setUser:d,isLoggedIn:function(){return c?!0:!1},getUser:function(){return c},getId:function(){return c?c._id:null},getToken:function(){return c?c.token:""},setToken:function(a){c.token=a},logout:function(){a.remove("user"),c=null}}}),angular.module("fitApp.services").factory("exerciseService",function(a){var b=a.withConfig(function(a){a.setBaseUrl("/api")}),c=b.all("exercises");return{getAll:function(){return c.getList()},get:function(a){return b.one("exercises",a).get()},post:function(a){return c.post(a)},put:function(a){return a.put()},destroy:function(a){return b.one("exercises",a).remove()}}}),angular.module("fitApp.services").factory("userService",function(a){var b=a.withConfig(function(a){a.setBaseUrl("/api")}),c=b.all("users");return{getAll:function(){return c.getList()},get:function(a){return b.one("users",a).get()},post:function(a){return c.post(a)},postLogin:function(a){return c.customPOST(a,"login")},put:function(a){return a.put()},destroy:function(a){return b.one("users",a).remove()}}}),angular.module("fitApp.services").factory("workoutService",function(a){var b=a.withConfig(function(a){a.setBaseUrl("/api")}),c=b.all("workouts");return{getAll:function(){return c.getList()},get:function(a){return b.one("workouts",a).get()},post:function(a){return c.post(a)},put:function(a){return a.put()},destroy:function(a){return b.one("workouts",a).remove()}}});var test="Test",fuc="foo";